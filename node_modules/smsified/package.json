{
  "name": "smsified",
  "description": "A Node.js library for interaction with the SMSified API.",
  "version": "1.0.6",
  "homepage": "http://smsified.com",
  "author": {
    "name": "Mark Headd",
    "email": "mheadd@voxeo.com",
    "url": "http://smsified.com"
  },
  "main": "./lib/smsified",
  "directories": {
    "lib": "./lib",
    "examples": "./examples"
  },
  "repositories": [
    {
      "type": "git",
      "url": "https://github.com/smsified/smsified-node"
    }
  ],
  "engines": {
    "node": ">=0.4.0"
  },
  "readme": "Node.js Module for the SMSified API\n=========================\n\nA Node.js module for interaction with the [SMSified](http://smsified.com) API.\n\nSMSified API Overview\n---------------------\n\nSMSified is a simple REST SMS API, built to uniquely enable developers to create powerful SMS services with minimum effort. Through SMSified, developers can both send and receive SMS messages, as well as track usage and message history through a powerful reporting dashboard. You can use either standard phone numbers or short codes, and best of all, SMSified is backed by Voxeo - the world's largest real-time application cloud.\n\nWhen you sign up, you automatically receive $20 in credit and one free phone number; this allows you to both receive and send free SMS messages while testing. When the credit runs out, just add a credit card for billing and you're live - but you get to keep the phone number for free! Check out our pricing page for more information.\n\nMore info here: [SMSified API Docs](http://www.smsified.com/sms-api-documentation)\n\nInstallation\n------------\n\n\tnpm install smsified\n\n\nUsage Examples\n--------------\n\nThe following simple example will send an outbound SMS message from (407) 554-1234 to (518) 476-1234 and write out the JSON response from SMSified to the console:\n\n```js\nvar sys = require('sys');\nvar smsified = require('smsified');\n\nvar sms = new SMSified('username', 'password');\nvar options = {senderAddress: '4075541234', address: '15184761234', message: 'Hello world from Node.js'};\nsms.sendMessage(options, function(result) {\n\tsys.puts(sys.inspect(result));\n});\n```\n\nSend an outbound SMS message and set a callback URL:\n\n```js\nvar sms = new SMSified('username', 'password');\nvar options = {senderAddress: '4075541234', address: '15184761234', message: 'Hello from Node.js with another callback', notifyURL: 'http://path-to-somewhere/'};\nsms.sendMessage(options, function(result) {\n\tsys.puts(sys.inspect(result));\n});\n```\n\nProcess an inbound SMS message:\n\n```js\nvar sys = require('sys');\nvar http = require('http');\nvar smsified = require('../lib/smsified');\nvar port = 8000 || process.ARGS[1];\n\n// Create a new HTTP server to listen for incoming messages.\nvar server = http.createServer(function(req, res) {\n\n        req.addListener('data', function(data){\n        var json = JSON.parse(data);\n        var inbound = new InboundMessage(json);\n        sys.puts('Inbound message: ' + inbound.message);\n        });\n\n        res.writeHead(200);\n        res.end();\n\n}).listen(port);\nsys.puts('Server listening on port ' + port);\n```\n\nCheck the status of an SMS message:\n\n```js\nvar sms = new SMSified('username', 'password');\nsms.checkStatus('4075541234', '43d2f75b2bda27006200003e9b7dcf3b', function(result) {\n\tsys.puts(sys.inspect(result.deliveryInfoList.deliveryInfo));\n});\n```\n\nCreate a subscription for an account phone number:\n\n```js\nvar sms = new SMSified('username', 'password');\nsms.createSubscription('4075541234', 'outbound', 'http://path-to-somewhere', function(result) {\n\tsys.puts(sys.inspect(result));\n});\n```\n\nView all active subscriptions:\n\n```js\nvar sms = new SMSified('username', 'password');\nsms.viewSubscriptions('4075541234', 'outbound', function(result) {\n\tsys.puts('Number of subscriptions: ' + result.outboundSubscriptionList.numberOfSubscriptions);\n\tsys.puts(sys.inspect(result.outboundSubscriptionList.outboundSubscription));\n});\n```\n\nDelete a subscription:\n\n```js\nvar sms = new SMSified('username', 'password');\nsms.deleteSubscriptions('6267217aae394b5dc656ba4216082304', 'outbound', function(result) {\n\tif(result = '204') {\n\t\tsys.puts('Subscription delted.');\n\t}\n\telse {\n\t\tsys.puts('Could not delete subscription.');\n\t}\t\n});\n```\n\nRetrieve delivery information on a message:\n\n```js\nvar sms = new SMSified('username', 'password');\nsms.getMessages('02b45e3072ae5e157a12d0408bcede65', null, function(result) {\n\tsys.puts(sys.inspect(result));\n});\n```\n\nRetrieve delivery information on a set of messages, using filters to specify messages:\n\n```js\nvar sms = new SMSified('username', 'password');\nsms.getMessages(null, {status: 'success', direction: 'in'}, function(result) {\n\tsys.puts(sys.inspect(result));\n});\n```\n",
  "readmeFilename": "README.md",
  "_id": "smsified@1.0.6",
  "_from": "smsified@~1.0.6"
}
